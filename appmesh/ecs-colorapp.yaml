---
Parameters:
  EnvironmentName:
    Type: String
    Description: Environment name that joins all the stacks

  SideCarRouterManagerImage:
    Type: String
    Description: Sidecar router manager that sets up networking for transparent proxy
    Default: "111345817488.dkr.ecr.us-west-2.amazonaws.com/aws-appmesh-proxy-route-manager"

  EnvoyImage:
    Type: String
    Description: Envoy image to use

  AppMeshXdsEndpoint:
    Type: String
    Description: App Mesh XDS Endpoint Override
    Default: ""

  EnvoyLogLevel:
    Type: String
    Default: debug

  ColorTellerImage:
    Type: String
    Description: Color Teller app image
    
  ColorGatewayImage:
    Type: String
    Description: Color Gateway app image

  AppMeshMeshName:
    Type: String
    Description: Name of mesh

  AppMeshEgressIgnoredIpCsv:
    Type: String
    Default: 169.254.170.2,169.254.169.254

  ECSServicesDomain:
    Type: String
    Description: DNS namespace used by services e.g. default.svc.cluster.local

Resources:

  ### colorteller-red.default.svc.cluster.local
  ColorTellerRedServiceDiscoveryRecord:
    Type: 'AWS::ServiceDiscovery::Service'
    Properties:
      Name: "colorteller-red"
      DnsConfig:
        NamespaceId:
          'Fn::ImportValue': !Sub "${EnvironmentName}:ECSServiceDiscoveryNamespace"
        DnsRecords:
          - Type: A
            TTL: 300
      HealthCheckCustomConfig:
        FailureThreshold: 1

  ColorTellerRedService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster:
        'Fn::ImportValue': !Sub "${EnvironmentName}:ECSCluster"
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: 1
      LaunchType: EC2
      ServiceRegistries:
        - RegistryArn:
            'Fn::GetAtt': ColorTellerRedServiceDiscoveryRecord.Arn
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - 'Fn::ImportValue': !Sub "${EnvironmentName}:ECSServiceSecurityGroup"
          Subnets: 
            - 'Fn::ImportValue': !Sub "${EnvironmentName}:PrivateSubnet1"
            - 'Fn::ImportValue': !Sub "${EnvironmentName}:PrivateSubnet2"
      TaskDefinition: { Ref: ColorTellerRedTaskDefinition }

  ColorTellerRedTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ContainerDefinitions:
        - Name: "app"
          Image: { Ref: ColorTellerImage }
          Essential: true
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-group:
                'Fn::ImportValue': !Sub "${EnvironmentName}:ECSServiceLogGroup"
              awslogs-region: { Ref: "AWS::Region" }
              awslogs-stream-prefix: "colorteller-red-app"
          PortMappings:
            - ContainerPort: 9080
              HostPort: 9080
              Protocol: "tcp"
          Environment:
            - Name: "SERVER_PORT"
              Value: "9080"
            - Name: "COLOR"
              Value: "red"
        - Name: envoy
          Image: { Ref: EnvoyImage }
          Essential: true
          User: "1337"
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-group:
                'Fn::ImportValue': !Sub "${EnvironmentName}:ECSServiceLogGroup"
              awslogs-region: { Ref: "AWS::Region" }
              awslogs-stream-prefix: "colorteller-red-envoy"
          Environment:
            - Name: "APPMESH_VIRTUAL_NODE_NAME"
              Value: !Sub "mesh/${AppMeshMeshName}/virtualNode/colorteller-red-vn"
            - Name: "ENVOY_LOG_LEVEL"
              Value: { Ref: EnvoyLogLevel }
            - Name: "APPMESH_XDS_ENDPOINT"
              Value: { Ref: AppMeshXdsEndpoint }
        - Name: "proxyinit"
          Image: { Ref: SideCarRouterManagerImage }
          Essential: false
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-group:
                'Fn::ImportValue': !Sub "${EnvironmentName}:ECSServiceLogGroup"
              awslogs-region: { Ref: "AWS::Region" }
              awslogs-stream-prefix: "colorteller-red-proxyinit"
          LinuxParameters:
            Capabilities:
              Add:
                - "NET_ADMIN"
          Environment:
            - Name: "APPMESH_START_ENABLED"
              Value: "1"
            - Name: "APPMESH_IGNORE_UID"
              Value: "1337"
            - Name: "APPMESH_ENVOY_INGRESS_PORT"
              Value: "15000"
            - Name: "APPMESH_ENVOY_EGRESS_PORT"
              Value: "15001"
            - Name: "APPMESH_APP_PORTS"
              Value: "9080"
            - Name: "APPMESH_EGRESS_IGNORED_IP"
              Value: { Ref: AppMeshEgressIgnoredIpCsv }
      ExecutionRoleArn:
        'Fn::ImportValue': !Sub "${EnvironmentName}:TaskExecutionIamRoleArn"
      TaskRoleArn:
        'Fn::ImportValue': !Sub "${EnvironmentName}:TaskIamRoleArn"
      NetworkMode: "awsvpc"
      Memory: 256